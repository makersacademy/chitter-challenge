Metrics/LineLength:
  # We set up error messages here and I don't want people suboptimising by making
  # their variables shorter... so we'll relax this a bit. Usually lines lime this:
  # ```
  #    AIRPORT_REFUSED_MESSAGE = "Airport has refused our landing! Probably bad weather"
  # ```
  # Would get extracted to locales, but that's out of the fence here so.
  Max: 100

  # While test refactoring is good, I suspect it's out of scope for week 1
  Exclude:
    - 'spec/**/*'

Metrics/BlockLength:
  # While test refactoring is good, I suspect it's out of scope for week 1
  Exclude:
    - 'spec/**/*'

# I've been quite careful about which style cops I've enabled
# Why? My feeling is that style cops can create lots of linter noise that
# is hard for a beginner to handle. This focuses the linting onto:
#   * Indentation & whitespace (inconsistency, really gross stuff like `a=1`)
#   * Easy wins in expressiveness (e.g. gurad clauses — nice opportunity to inject concretes)
#   * Egregious non-idiomatic ruby like `def getFilename`
#
# Quote cops are notable by their absence. They add a lot of noise and they're
# annoying to fix so a good opportunity to turn devs off of the utility of
# linting. Hopefully they pick them up later :)

Layout/IndentationConsistency:
  Enabled: true
Layout/IndentationWidth:
  Enabled: true
Naming/AccessorMethodName:
  Enabled: true
Layout/BlockEndNewline:
  Enabled: true
Naming/ClassAndModuleCamelCase:
  Enabled: true
Naming/ConstantName:
  Enabled: true
Style/DefWithParentheses:
  Enabled: true
Layout/EmptyLineBetweenDefs:
  Enabled: true
Layout/EmptyLines:
  Enabled: true
Layout/ExtraSpacing:
  Enabled: true
Style/GuardClause:
  Enabled: true
Style/IdenticalConditionalBranches:
  Enabled: true
Style/InverseMethods:
  Enabled: true
Layout/LeadingCommentSpace:
  Enabled: true
Naming/MethodName:
  Enabled: true
Style/NegatedIf:
  Enabled: true
Style/NegatedWhile:
  Enabled: true
Style/NilComparison:
  Enabled: true
Style/Not:
  Enabled: true
Style/NumericLiterals:
  Enabled: true
Style/NumericPredicate:
  Enabled: true
Style/OneLineConditional:
  Enabled: true
Naming/PredicateName:
  Enabled: true
Style/RedundantParentheses:
  Enabled: true
Style/RedundantSelf:
  Enabled: true
Style/SafeNavigation:
  Enabled: true
Style/SelfAssignment:
  Enabled: true
Layout/SpaceAfterColon:
  Enabled: true
Layout/SpaceAfterComma:
  Enabled: true
Layout/SpaceAfterMethodName:
  Enabled: true
Layout/SpaceAfterNot:
  Enabled: true
Layout/SpaceAfterSemicolon:
  Enabled: true
Layout/SpaceAroundBlockParameters:
  Enabled: true
Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true
Layout/SpaceAroundKeyword:
  Enabled: true
Layout/SpaceAroundOperators:
  Enabled: true
Layout/SpaceBeforeBlockBraces:
  Enabled: true
Layout/SpaceBeforeComma:
  Enabled: true
Layout/SpaceBeforeComment:
  Enabled: true
Layout/SpaceBeforeFirstArg:
  Enabled: true
Layout/SpaceBeforeSemicolon:
  Enabled: true
Layout/SpaceInLambdaLiteral:
  Enabled: true
Layout/SpaceInsideArrayPercentLiteral:
  Enabled: true
Layout/SpaceInsideBlockBraces:
  Enabled: true
Layout/SpaceInsideBrackets:
  Enabled: true
Layout/SpaceInsideHashLiteralBraces:
  Enabled: true
Layout/SpaceInsideParens:
  Enabled: true
Layout/SpaceInsidePercentLiteralDelimiters:
  Enabled: true
Layout/SpaceInsideRangeLiteral:
  Enabled: true
Layout/SpaceInsideStringInterpolation:
  Enabled: true
Style/SymbolLiteral:
  Enabled: true
Layout/TrailingBlankLines:
  Enabled: true
Style/TrivialAccessors:
  Enabled: true
Naming/VariableName:
  Enabled: true
Naming/FileName:
  Enabled: true

# Rubocop doesn't make disabling all cops in a given group easy, so we list...
Layout/AccessModifierIndentation:
  Enabled: false
Style/Alias:
  Enabled: false
Layout/AlignArray:
  Enabled: false
Layout/AlignHash:
  Enabled: false
Layout/AlignParameters:
  Enabled: false
Style/AndOr:
  Enabled: false
Style/ArrayJoin:
  Enabled: false
Style/AsciiComments:
  Enabled: false
Naming/AsciiIdentifiers:
  Enabled: false
Style/Attr:
  Enabled: false
Style/AutoResourceCleanup:
  Enabled: false
Style/BarePercentLiterals:
  Enabled: false
Style/BeginBlock:
  Enabled: false
Style/BlockComments:
  Enabled: false
Style/BlockDelimiters:
  Enabled: false
Style/BracesAroundHashParameters:
  Enabled: false
Style/CaseEquality:
  Enabled: false
Layout/CaseIndentation:
  Enabled: false
Style/CharacterLiteral:
  Enabled: false
Style/ClassAndModuleChildren:
  Enabled: false
Style/ClassCheck:
  Enabled: false
Style/ClassMethods:
  Enabled: false
Style/ClassVars:
  Enabled: false
Layout/ClosingParenthesisIndentation:
  Enabled: false
Style/CollectionMethods:
  Enabled: false
Style/ColonMethodCall:
  Enabled: false
Style/CommandLiteral:
  Enabled: false
Style/CommentAnnotation:
  Enabled: false
Layout/CommentIndentation:
  Enabled: false
Style/ConditionalAssignment:
  Enabled: false
Style/Copyright:
  Enabled: false
Style/Documentation:
  Enabled: false
Style/DocumentationMethod:
  Enabled: false
Layout/DotPosition:
  Enabled: false
Style/DoubleNegation:
  Enabled: false
Style/EachForSimpleLoop:
  Enabled: false
Style/EachWithObject:
  Enabled: false
Layout/ElseAlignment:
  Enabled: false
Style/EmptyCaseCondition:
  Enabled: false
Style/EmptyElse:
  Enabled: false
Layout/EmptyLineAfterMagicComment:
  Enabled: false
Layout/EmptyLinesAroundAccessModifier:
  Enabled: false
Layout/EmptyLinesAroundBeginBody:
  Enabled: false
Layout/EmptyLinesAroundBlockBody:
  Enabled: false
Layout/EmptyLinesAroundClassBody:
  Enabled: false
Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Enabled: false
Layout/EmptyLinesAroundMethodBody:
  Enabled: false
Layout/EmptyLinesAroundModuleBody:
  Enabled: false
Style/EmptyLiteral:
  Enabled: false
Style/EmptyMethod:
  Enabled: false
Style/Encoding:
  Enabled: false
Style/EndBlock:
  Enabled: false
Layout/EndOfLine:
  Enabled: false
Style/EvenOdd:
  Enabled: false
Layout/FirstArrayElementLineBreak:
  Enabled: false
Layout/FirstHashElementLineBreak:
  Enabled: false
Layout/FirstMethodArgumentLineBreak:
  Enabled: false
Layout/FirstMethodParameterLineBreak:
  Enabled: false
Layout/FirstParameterIndentation:
  Enabled: false
Style/FlipFlop:
  Enabled: false
Style/For:
  Enabled: false
Style/FormatString:
  Enabled: false
Style/FrozenStringLiteralComment:
  Enabled: false
Style/GlobalVars:
  Enabled: false
Style/HashSyntax:
  Enabled: false
Style/IfInsideElse:
  Enabled: false
Style/IfUnlessModifier:
  Enabled: false
Style/IfUnlessModifierOfIfUnless:
  Enabled: false
Style/IfWithSemicolon:
  Enabled: false
Style/ImplicitRuntimeError:
  Enabled: false
Layout/IndentArray:
  Enabled: false
Layout/IndentAssignment:
  Enabled: false
Layout/IndentHash:
  Enabled: false
Layout/IndentHeredoc:
  Enabled: false
Style/InfiniteLoop:
  Enabled: false
Layout/InitialIndentation:
  Enabled: false
Style/InlineComment:
  Enabled: false
Style/Lambda:
  Enabled: false
Style/LambdaCall:
  Enabled: false
Style/LineEndConcatenation:
  Enabled: false
Style/MethodCallWithArgsParentheses:
  Enabled: false
Style/MethodCallWithoutArgsParentheses:
  Enabled: false
Style/MethodCalledOnDoEndBlock:
  Enabled: false
Style/MethodDefParentheses:
  Enabled: false
Style/MethodMissing:
  Enabled: false
Style/MissingElse:
  Enabled: false
Style/MixinGrouping:
  Enabled: false
Style/ModuleFunction:
  Enabled: false
Layout/MultilineArrayBraceLayout:
  Enabled: false
Layout/MultilineAssignmentLayout:
  Enabled: false
Style/MultilineBlockChain:
  Enabled: false
Layout/MultilineBlockLayout:
  Enabled: false
Layout/MultilineHashBraceLayout:
  Enabled: false
Style/MultilineIfModifier:
  Enabled: false
Style/MultilineIfThen:
  Enabled: false
Style/MultilineMemoization:
  Enabled: false
Layout/MultilineMethodCallBraceLayout:
  Enabled: false
Layout/MultilineMethodCallIndentation:
  Enabled: false
Layout/MultilineMethodDefinitionBraceLayout:
  Enabled: false
Layout/MultilineOperationIndentation:
  Enabled: false
Style/MultilineTernaryOperator:
  Enabled: false
Style/MutableConstant:
  Enabled: false
Style/NestedModifier:
  Enabled: false
Style/NestedParenthesizedCalls:
  Enabled: false
Style/NestedTernaryOperator:
  Enabled: false
Style/Next:
  Enabled: false
Style/NonNilCheck:
  Enabled: false
Style/NumericLiteralPrefix:
  Enabled: false
Naming/BinaryOperatorParameterName:
  Enabled: false
Style/OptionHash:
  Enabled: false
Style/OptionalArguments:
  Enabled: false
Style/ParallelAssignment:
  Enabled: false
Style/ParenthesesAroundCondition:
  Enabled: false
Style/PercentLiteralDelimiters:
  Enabled: false
Style/PercentQLiterals:
  Enabled: false
Style/PerlBackrefs:
  Enabled: false
Style/PreferredHashMethods:
  Enabled: false
Style/Proc:
  Enabled: false
Style/RaiseArgs:
  Enabled: false
Style/RedundantBegin:
  Enabled: false
Style/RedundantException:
  Enabled: false
Style/RedundantFreeze:
  Enabled: false
Style/RedundantReturn:
  Enabled: false
Style/RegexpLiteral:
  Enabled: false
Layout/RescueEnsureAlignment:
  Enabled: false
Style/RescueModifier:
  Enabled: false
Style/Semicolon:
  Enabled: false
Style/Send:
  Enabled: false
Style/SignalException:
  Enabled: false
Style/SingleLineBlockParams:
  Enabled: false
Style/SingleLineMethods:
  Enabled: false
Style/SpecialGlobalVars:
  Enabled: false
Style/StabbyLambdaParentheses:
  Enabled: false
Style/StringLiterals:
  Enabled: false
Style/StringLiteralsInInterpolation:
  Enabled: false
Style/StringMethods:
  Enabled: false
Style/StructInheritance:
  Enabled: false
Style/SymbolArray:
  Enabled: false
Style/SymbolProc:
  Enabled: false
Layout/Tab:
  Enabled: false
Style/TernaryParentheses:
  Enabled: false
Style/TrailingCommaInArguments:
  Enabled: false
Style/TrailingCommaInLiteral:
  Enabled: false
Style/TrailingUnderscoreVariable:
  Enabled: false
Layout/TrailingWhitespace:
  Enabled: false
Style/UnlessElse:
  Enabled: false
Style/UnneededCapitalW:
  Enabled: false
Style/UnneededInterpolation:
  Enabled: false
Style/UnneededPercentQ:
  Enabled: false
Style/VariableInterpolation:
  Enabled: false
Naming/VariableNumber:
  Enabled: false
Style/WhenThen:
  Enabled: false
Style/WhileUntilDo:
  Enabled: false
Style/WhileUntilModifier:
  Enabled: false
Style/WordArray:
  Enabled: false
Style/ZeroLengthPredicate:
  Enabled: false
