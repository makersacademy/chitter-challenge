As a Maker
So that I can post messages on Chitter as me
I want to sign up for Chitter
(with their email, password, name and a user name)
(The username and email are unique.) >> DONE

As a Maker
So that I can post messages on Chitter as me
I want to log in to Chitter >> DONE

As a Maker
So that I can avoid others posting messages on Chitter as me
I want to log out of Chitter >> DONE

As a maker
So that I can let people know what I am doing
I want to post a message (peep) to chitter
(Peeps (posts to chitter) have the name of the maker and their user handle.)
(You only can peep if you are logged in.) >> DONE

As a maker
So that I can see what others are saying
I want to see all peeps in reverse chronological order
(You don't have to be logged in to see the peeps.) >> DONE

As a maker
So that I can better appreciate the context of a peep
I want to see the time at which it was made >> DONE

EXTRA
>> I want to reply to a peep from another maker. >> DONE

Models required
1. User properties :id, :name, :username, :email, :password_digest, :password_confirmation
2. Peep properties :id, :message, :user_id, :created_at (timestamp)

Controller clusters required >> Remember to keep thin on logic
 1. Index >> / loads up key models
 2. Users >> to manage sign-up process
 3. Peeps (or sessions) >> to manage adding new message

Views required
 1. Layout - to provide access to buttons and links to sign-up, sign-in
 2. Index - to provide list of tweets (and option to add tweets)
 3. Sign-up view
 4. Sign-in view

Plan (Friday)
- Set-up >> full file layout, set-up databases, config.ru, Gemfiles, public files and post a simple webpage to check working (DONE)
- Sign-up tests and user journey (DONE)
- Log-in tests and user journey
- GOAL >> can put on a basic 'Peep' onto home-page with attributes

To-do
- Add test for displaying peep.user.name
- Make reverse order chronologically (.reverse on array?)
- Add time
- Add >> add a peep
- Add log-out functionality and ensure sessions working properly (only add peep button after a session log-in, how remove when log-out?) >> if session_id then show this button on layout, otherwise don't
- Push a basic working version to heroku
- Think through reply functionality + build test
- Full mock of desired layout/ CSS plan
- Complete CSS
- Consider trying to add some JS/ jQuery
- README
- Change heroku name
  >> old if breaks heroku https://git.heroku.com/young-scrubland-6248.git (push)
- Add build status

CSS key features/ steps
  >> Minimalitter
  >> Soft black background
  >> White text (get a good font)
  >> Header that scrolls down and has white bottom border (Moving navbar)
  >> Click to Peep image (use glycphicons)
  >> Slim line containers (bottom white line each with container)
  >> Reformat the time
  >> Fix form text input style

Nice to have
  >> CSS style switcher
  >> Bring peep onto front page












